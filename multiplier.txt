library ieee;
use ieee.std_logic_1164.all;

entity multiplier is
	port(
		a : in std_logic_vector (7 downto 0);
		b : in std_logic_vector (7 downto 0);
		output : out std_logic_vector (15 downto 0)
	);

end multiplier;

architecture multiplier of multiplier is
 
	component completeadder is
  port( 
    a : in std_logic_vector (7 downto 0);
    b : in std_logic_vector (7 downto 0);
    cout : out std_logic;
    s : out std_logic_vector(7 downto 0)
  );
  end component completeadder;

	signal a_adder0 : std_logic_vector (7 downto 0);
	signal b_adder0 : std_logic_vector (7 downto 0);
	signal sum_adder0 : std_logic_vector (7 downto 0);
	signal cout_adder0 : std_logic;
	
	signal a_adder1 : std_logic_vector (7 downto 0);
	signal b_adder1 : std_logic_vector (7 downto 0);
	signal sum_adder1 : std_logic_vector (7 downto 0);
	signal cout_adder1 : std_logic;
	
	signal a_adder2 : std_logic_vector (7 downto 0);
	signal b_adder2 : std_logic_vector (7 downto 0);
	signal sum_adder2 : std_logic_vector (7 downto 0);
	signal cout_adder2 : std_logic;
	
	signal a_adder3 : std_logic_vector (7 downto 0);
	signal b_adder3 : std_logic_vector (7 downto 0);
	signal sum_adder3 : std_logic_vector (7 downto 0);
	signal cout_adder3 : std_logic;
	
	signal a_adder4 : std_logic_vector (7 downto 0);
	signal b_adder4 : std_logic_vector (7 downto 0);
	signal sum_adder4 : std_logic_vector (7 downto 0);
	signal cout_adder4 : std_logic;
	
	signal a_adder5 : std_logic_vector (7 downto 0);
	signal b_adder5 : std_logic_vector (7 downto 0);
	signal sum_adder5 : std_logic_vector (7 downto 0);
	signal cout_adder5 : std_logic;
	
	signal a_adder6 : std_logic_vector (7 downto 0);
	signal b_adder6 : std_logic_vector (7 downto 0);
	signal sum_adder6 : std_logic_vector (7 downto 0);
	signal cout_adder6 : std_logic;
begin
	a_adder0(0) <= a(1) and b(0);
	a_adder0(1) <= a(2) and b(0);
	a_adder0(2) <= a(3) and b(0);
	a_adder0(3) <= a(4) and b(0);
	a_adder0(4) <= a(5) and b(0);
	a_adder0(5) <= a(6) and b(0);
	a_adder0(6) <= a(7) and b(0);
	a_adder0(7) <= '0';
	
	b_adder0(0) <= a(0) and b(1);
	b_adder0(1) <= a(1) and b(1);
	b_adder0(2) <= a(2) and b(1);
	b_adder0(3) <= a(3) and b(1);
	b_adder0(4) <= a(4) and b(1);
	b_adder0(5) <= a(5) and b(1);
	b_adder0(6) <= a(6) and b(1);
	b_adder0(7) <= a(7) and b(1);
	
	a_adder1(0) <= sum_adder0(1);
	a_adder1(1) <= sum_adder0(2);
	a_adder1(2) <= sum_adder0(3);
	a_adder1(3) <= sum_adder0(4);
	a_adder1(4) <= sum_adder0(5);
	a_adder1(5) <= sum_adder0(6);
	a_adder1(6) <= sum_adder0(7);
	a_adder1(7) <= cout_adder0;
	
	b_adder1(0) <= a(0) and b(2);
	b_adder1(1) <= a(1) and b(2);
	b_adder1(2) <= a(2) and b(2);
	b_adder1(3) <= a(3) and b(2);
	b_adder1(4) <= a(4) and b(2);
	b_adder1(5) <= a(5) and b(2);
	b_adder1(6) <= a(6) and b(2);
	b_adder1(7) <= a(7) and b(2);
	
	a_adder2(0) <= sum_adder1(1);
	a_adder2(1) <= sum_adder1(2);
	a_adder2(2) <= sum_adder1(3);
	a_adder2(3) <= sum_adder1(4);
	a_adder2(4) <= sum_adder1(5);
	a_adder2(5) <= sum_adder1(6);
	a_adder2(6) <= sum_adder1(7);
	a_adder2(7) <= cout_adder1;
	
	b_adder2(0) <= a(0) and b(3);
	b_adder2(1) <= a(1) and b(3);
	b_adder2(2) <= a(2) and b(3);
	b_adder2(3) <= a(3) and b(3);
	b_adder2(4) <= a(4) and b(3);
	b_adder2(5) <= a(5) and b(3);
	b_adder2(6) <= a(6) and b(3);
	b_adder2(7) <= a(7) and b(3);
	
	a_adder3(0) <= sum_adder2(1);
	a_adder3(1) <= sum_adder2(2);
	a_adder3(2) <= sum_adder2(3);
	a_adder3(3) <= sum_adder2(4);
	a_adder3(4) <= sum_adder2(5);
	a_adder3(5) <= sum_adder2(6);
	a_adder3(6) <= sum_adder2(7);
	a_adder3(7) <= cout_adder2;
	
	b_adder3(0) <= a(0) and b(4);
	b_adder3(1) <= a(1) and b(4);
	b_adder3(2) <= a(2) and b(4);
	b_adder3(3) <= a(3) and b(4);
	b_adder3(4) <= a(4) and b(4);
	b_adder3(5) <= a(5) and b(4);
	b_adder3(6) <= a(6) and b(4);
	b_adder3(7) <= a(7) and b(4);
	
	a_adder4(0) <= sum_adder3(1);
	a_adder4(1) <= sum_adder3(2);
	a_adder4(2) <= sum_adder3(3);
	a_adder4(3) <= sum_adder3(4);
	a_adder4(4) <= sum_adder3(5);
	a_adder4(5) <= sum_adder3(6);
	a_adder4(6) <= sum_adder3(7);
	a_adder4(7) <= cout_adder3;
	
	b_adder4(0) <= a(0) and b(5);
	b_adder4(1) <= a(1) and b(5);
	b_adder4(2) <= a(2) and b(5);
	b_adder4(3) <= a(3) and b(5);
	b_adder4(4) <= a(4) and b(5);
	b_adder4(5) <= a(5) and b(5);
	b_adder4(6) <= a(6) and b(5);
	b_adder4(7) <= a(7) and b(5);
	
	a_adder5(0) <= sum_adder4(1);
	a_adder5(1) <= sum_adder4(2);
	a_adder5(2) <= sum_adder4(3);
	a_adder5(3) <= sum_adder4(4);
	a_adder5(4) <= sum_adder4(5);
	a_adder5(5) <= sum_adder4(6);
	a_adder5(6) <= sum_adder4(7);
	a_adder5(7) <= cout_adder4;
	
	b_adder5(0) <= a(0) and b(6);
	b_adder5(1) <= a(1) and b(6);
	b_adder5(2) <= a(2) and b(6);
	b_adder5(3) <= a(3) and b(6);
	b_adder5(4) <= a(4) and b(6);
	b_adder5(5) <= a(5) and b(6);
	b_adder5(6) <= a(6) and b(6);
	b_adder5(7) <= a(7) and b(6);
	
	a_adder6(0) <= sum_adder5(1);
	a_adder6(1) <= sum_adder5(2);
	a_adder6(2) <= sum_adder5(3);
	a_adder6(3) <= sum_adder5(4);
	a_adder6(4) <= sum_adder5(5);
	a_adder6(5) <= sum_adder5(6);
	a_adder6(6) <= sum_adder5(7);
	a_adder6(7) <= cout_adder5;
	
	b_adder6(0) <= a(0) and b(7);
	b_adder6(1) <= a(1) and b(7);
	b_adder6(2) <= a(2) and b(7);
	b_adder6(3) <= a(3) and b(7);
	b_adder6(4) <= a(4) and b(7);
	b_adder6(5) <= a(5) and b(7);
	b_adder6(6) <= a(6) and b(7);
	b_adder6(7) <= a(7) and b(7);
	
	adder0: completeadder PORT MAP (
    a => a_adder0, 
		b => b_adder0,
		s => sum_adder0,
		cout => cout_adder0
    );
	
	adder1: completeadder PORT MAP (
    a => a_adder1, 
		b => b_adder1,
		s => sum_adder1,
		cout => cout_adder1
    );
	
	adder2: completeadder PORT MAP (
    a => a_adder2, 
		b => b_adder2,
		s => sum_adder2,
		cout => cout_adder2
    );
	
	adder3: completeadder PORT MAP (
    a => a_adder3, 
		b => b_adder3,
		s => sum_adder3,
		cout => cout_adder3
    );
	
	adder4: completeadder PORT MAP (
    a => a_adder4, 
		b => b_adder4,
		s => sum_adder4,
		cout => cout_adder4
    );
	
	adder5: completeadder PORT MAP (
    a => a_adder5, 
		b => b_adder5,
		s => sum_adder5,
		cout => cout_adder5
    );
	
	adder6: completeadder PORT MAP (
    a => a_adder6, 
		b => b_adder6,
		s => sum_adder6,
		cout => cout_adder6
    );
	
	-- p(0) <= sum_adder2(0);
	-- p(1) <= sum_adder3(0);
	-- p(2) <= sum_adder4(0);
	-- p(3) <= sum_adder5(0);
	-- p(4) <= sum_adder6(0);
	-- p(5) <= sum_adder6(1);
	-- p(6) <= sum_adder6(2);
	-- p(7) <= sum_adder6(3);
	
	output(0) <= a(0) and b(0);
	output(1) <= sum_adder0(0);
	output(2) <= sum_adder1(0);
	output(3) <= sum_adder2(0);
	output(4) <= sum_adder3(0);
	output(5) <= sum_adder4(0);
	output(6) <= sum_adder5(0);
	output(7) <= sum_adder6(0);
	output(8) <= sum_adder6(1);
	output(9) <= sum_adder6(2);
	output(10) <= sum_adder6(3);
	output(11) <= sum_adder6(4);
	output(12) <= sum_adder3(5);
	output(13) <= sum_adder6(6);
	output(14) <= sum_adder6(7);
	output(15) <= cout_adder6;
	
end multiplier;


